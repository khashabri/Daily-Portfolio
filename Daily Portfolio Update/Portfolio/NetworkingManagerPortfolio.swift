import Foundation
import Combine

// MARK: - User Input
struct UserInput: Identifiable, Equatable{
    let id = UUID()
    let compName: String
    lazy var compSymbol = getKey(value: compName)
    let purchaseDate: String
    let purchaseAmount: Double
}

// MARK: - Company Portfolio Output
struct CompPortfolioOutput: Identifiable{
    var id = UUID()
    var lastRefreshed: String = ""
    var compName: String = ""
    var compSymbol: String = ""
    var purchaseDate: String = ""
    var purchasePrice: Double = 0
    var purchaseAmount: Double = 0
    var totalInvestment: Double = 0
    var totalCurrentValue: Double = 0
    var gainHistory: [Double] = []
    var currentGain: Double = 0
    var priceHistory: [Double] = []
    
    // Additionals
    // Daily statistics
    var open: String = ""
    var close: String = ""
    var high: String = ""
    var low: String = ""
    var volume: String = ""
    
    // Time characteristics
    var priceChange1D: Double = 0
    var priceChange5D: Double = 0
    var priceChange1M: Double = 0
    var priceChange1Y: Double = 0
    
    var volumeChange1D: Double = 0
    var volumeChange5D: Double = 0
    var volumeChange1M: Double = 0
    var volumeChange1Y: Double = 0
}

//// MARK: - Class
class NetworkingManagerPortfolio: ObservableObject {
    var urlString: String
    var compPortfolioOutput = CompPortfolioOutput()
    
    init(userInput: UserInput) {
        var userInput = userInput
        
        self.compPortfolioOutput.compName = userInput.compName
        self.compPortfolioOutput.compSymbol = userInput.compSymbol
        self.compPortfolioOutput.purchaseDate = userInput.purchaseDate
        self.compPortfolioOutput.purchaseAmount = userInput.purchaseAmount
        
        self.urlString = MakeApiStringUrl(compSymbol: compPortfolioOutput.compSymbol, outputSize: "full")
    }
    
    func getData(completion: @escaping (CompPortfolioOutput) -> ()){
        
        guard let url = URL(string: self.urlString) else { return }
        
        URLSession.shared.dataTask(with: url) { (data,_,_) in
            guard let data = data else { return }
            
            let welcome = try! JSONDecoder().decode(Welcome.self, from: data)
            
            DispatchQueue.main.async {
                
                var workingDate = self.compPortfolioOutput.purchaseDate
                let totDatesArr = welcome.compData.keys.sorted(by: >)
                
                let date0D = totDatesArr[0]
                let date1D = totDatesArr[1]
                let date5D = totDatesArr[5]
                let date1M = totDatesArr[22]
                let date1Y = totDatesArr[264]
                
                // Make up day statistics
                self.compPortfolioOutput.open = (welcome.compData[date0D]?.s_open)!
                self.compPortfolioOutput.close = (welcome.compData[date0D]?.s_close)!
                self.compPortfolioOutput.high = (welcome.compData[date0D]?.s_high)!
                self.compPortfolioOutput.low = (welcome.compData[date0D]?.s_low)!
                self.compPortfolioOutput.volume = (welcome.compData[date0D]?.s_volume)!
                
                // Making up watchlist data
                self.compPortfolioOutput.priceChange1D = calcRateS(x: welcome.compData[date0D]!.s_close, y: welcome.compData[date1D]!.s_close)
                self.compPortfolioOutput.priceChange5D = calcRateS(x: welcome.compData[date0D]!.s_close, y: welcome.compData[date5D]!.s_close)
                self.compPortfolioOutput.priceChange1M = calcRateS(x: welcome.compData[date0D]!.s_close, y: welcome.compData[date1M]!.s_close)
                self.compPortfolioOutput.priceChange1Y = calcRateS(x: welcome.compData[date0D]!.s_close, y: welcome.compData[date1Y]!.s_close)
                
                self.compPortfolioOutput.volumeChange1D = calcRateS(x: welcome.compData[date0D]!.s_volume, y: welcome.compData[date1D]!.s_volume)
                self.compPortfolioOutput.volumeChange5D = calcRateS(x: welcome.compData[date0D]!.s_volume, y: welcome.compData[date5D]!.s_volume)
                self.compPortfolioOutput.volumeChange1M = calcRateS(x: welcome.compData[date0D]!.s_volume, y: welcome.compData[date1M]!.s_volume)
                self.compPortfolioOutput.volumeChange1Y = calcRateS(x: welcome.compData[date0D]!.s_volume, y: welcome.compData[date1Y]!.s_volume)
                
                
                // Making up portfolio data
                while !totDatesArr.contains(workingDate) {
                    workingDate = workingDate.convertToNextDate()
                }
                let thatDatePosition = totDatesArr.firstIndex(of: workingDate)!
                let usefulDates = Array(totDatesArr[0...thatDatePosition])
                let prices = welcome.compData.values(of: usefulDates)
                let thatTimePrice = prices.last!
                
                self.compPortfolioOutput.gainHistory = self.compPortfolioOutput.purchaseAmount * (prices - thatTimePrice)
                
                self.compPortfolioOutput.currentGain = calcRateD(x: prices.first!, y: prices.last!)
                
                self.compPortfolioOutput.totalInvestment = self.compPortfolioOutput.purchaseAmount * prices.last!
                
                self.compPortfolioOutput.purchasePrice = prices.last!
                
                self.compPortfolioOutput.totalCurrentValue = self.compPortfolioOutput.purchaseAmount * prices.first!
                
                self.compPortfolioOutput.lastRefreshed = welcome.metaData.lastRefreshed
                
                self.compPortfolioOutput.priceHistory = prices
                                
                completion(self.compPortfolioOutput)
            }
        }.resume()
    }
}

// MARK: - Sample Offline Data
func JsonOfflineCompPortfolioOutput() -> CompPortfolioOutput {
    let url = Bundle.main.url(forResource: "AmdOfflineApiData", withExtension: ".txt")!
    let data = try! Data(contentsOf: url)
    let welcome = try! JSONDecoder().decode(Welcome.self, from: data)
    
    var compPortfolioOutput = CompPortfolioOutput(compName: "Apple Inc.", compSymbol: "aapl", purchaseDate: "2020-03-19", purchaseAmount: 12)
    
    let workingDate = compPortfolioOutput.purchaseDate
    let totDatesArr = welcome.compData.keys.sorted(by: >)
    
    let thatDatePosition = totDatesArr.firstIndex(of: workingDate)!
    let usefulDates = Array(totDatesArr[0...thatDatePosition])
    let prices = welcome.compData.values(of: usefulDates)
    let thatTimePrice = prices.last!
    
    compPortfolioOutput.gainHistory = compPortfolioOutput.purchaseAmount * (prices - thatTimePrice)
    
    compPortfolioOutput.currentGain = roundGoodD(x: (prices.first! - prices.last!) / prices.last!)
    
    compPortfolioOutput.totalInvestment = compPortfolioOutput.purchaseAmount * prices.last!
    
    compPortfolioOutput.purchasePrice = prices.last!
    
    compPortfolioOutput.totalCurrentValue = compPortfolioOutput.purchaseAmount * prices.first!
    
    compPortfolioOutput.lastRefreshed = welcome.metaData.lastRefreshed
    
    return compPortfolioOutput
}


var dataEntry = ["SNAP": [CompPortfolioOutput(lastRefreshed: "2020-08-27", compName: "Snap Inc.", compSymbol: "SNAP", purchaseDate: "2017-07-01", purchasePrice: 17.59, purchaseAmount: 15.0, totalInvestment: 263.85, totalCurrentValue: 326.09999999999997, gainHistory: [62.25000000000001, 56.55, 52.949999999999996, 49.199999999999996, 60.15, 63.6, 64.95, 62.699999999999996, 63.0, 61.49999999999999, 64.64999999999999, 64.05, 60.15, 66.44999999999999, 59.85, 56.4, 61.650000000000006, 62.55, 54.449999999999996, 72.45, 72.30000000000001, 79.64999999999999, 75.0, 78.75, 68.39999999999999, 65.7, 84.15, 107.25, 115.19999999999999, 104.25, 94.64999999999999, 104.25, 92.25, 100.19999999999999, 119.10000000000001, 125.25, 132.3, 108.3, 87.45, 84.45, 91.95, 88.5, 82.5, 82.2, 103.35, 90.6, 91.2, 84.15, 76.05000000000001, 66.0, 63.45, 49.65, 47.400000000000006, 38.849999999999994, 31.8, 54.15, 52.5, 45.9, 41.1, 25.049999999999997, 32.1, 32.400000000000006, 29.4, 20.25, 9.9, -8.85, -2.6999999999999997, 1.2, -0.6, 9.6, -1.65, -1.5, -7.35, -9.9, -12.299999999999999, -3.15, 7.5, 9.6, 8.4, -3.9000000000000004, -1.2, -7.35, -12.0, 0.3, 3.5999999999999996, -17.7, -10.200000000000001, -23.85, -22.95, -8.7, -77.25, -70.05, -69.15, -68.55000000000001, -60.15, -57.15, -60.75, -59.7, -65.55, -82.35000000000001, -81.44999999999999, -97.95, -94.80000000000001, -95.7, -85.5, -86.10000000000001, -81.15, -84.6, -95.4, -98.85, -104.10000000000001, -112.5, -121.79999999999998, -138.3, -130.2, -127.94999999999999, -93.60000000000001, -107.55, -101.7, -84.0, -92.1, -68.85, -56.1, -59.4, -60.6, -48.0, -51.3, -43.95, -28.799999999999997, -25.5, -21.599999999999998, -13.35, -10.05, -5.8500000000000005, -6.3, -0.44999999999999996, 0.0, -2.85, 0.3, 0.15, -6.9, -8.85, -21.0, 20.849999999999998, 9.6, 11.850000000000001, 19.35, 23.25, 21.0, 15.450000000000001, 21.9, 24.9, 22.65, 21.15, 22.8, 9.9, 9.0, 6.0, 6.1499999999999995, -2.6999999999999997, -3.45, -13.8, -8.4, -12.15, -12.6, -12.15, -18.9, -25.5, -23.400000000000002, -24.3, -29.7, -31.5, -30.6, -31.95, -37.2, -37.35, -37.2, -37.5, -47.1, -50.4, -52.5, -50.4, -42.75, -43.650000000000006, -38.849999999999994, -40.05, -44.85, -35.099999999999994, -33.6, -31.95, -31.349999999999998, -34.95, -37.65, -34.199999999999996, -36.45, -43.5, -54.75, -48.300000000000004, -46.800000000000004, -48.15, -48.0, -51.0, -51.45, -47.7, -41.4, -33.6, -36.150000000000006, -37.949999999999996, -40.95, -44.25, -43.650000000000006, -54.449999999999996, -61.050000000000004, -66.15, -53.849999999999994, -45.15, -61.050000000000004, -57.15, -58.8, -52.5, -57.45, -51.45, -52.65, -50.699999999999996, -51.6, -46.800000000000004, -46.05, -49.35, -41.85, -31.049999999999997, -26.85, -23.55, -8.85, -7.199999999999999, -8.25, -7.05, -8.25, -10.649999999999999, -10.35, -11.4, -27.450000000000003, -23.85, -27.3, -34.199999999999996, -38.55, -34.199999999999996, -14.549999999999999, -25.8, -26.85, -24.9, -26.4, -27.150000000000002, -30.6, -31.200000000000003, -22.2, -30.6, -22.65, -21.75, -22.65, -21.45, -24.150000000000002, -24.0, -18.45, -8.85, -11.700000000000001, -9.15, -12.45, -25.2, -19.5, -16.95, -8.4, -13.65, -11.850000000000001, -9.9, -1.3499999999999999, 4.5, 1.5, 0.3, -41.4, -51.6, -53.55, -45.6, -39.900000000000006, -38.849999999999994, -31.349999999999998, -29.7, -30.3, -34.95, -35.099999999999994, -36.75, -35.4, -42.45, -52.35, -48.6, -49.35, -45.15, -43.199999999999996, -45.9, -42.45, -45.449999999999996, -41.25, -43.8, -40.95, -60.6, -54.449999999999996, -52.2, -57.599999999999994, -60.75, -57.3, -55.800000000000004, -56.55, -69.75, -69.6, -88.5, -85.5, -84.0, -88.65, -90.3, -90.45, -97.05, -94.2, -90.75, -96.0, -91.5, -92.55, -103.94999999999999, -106.5, -112.2, -106.5, -99.15, -101.55, -96.3, -87.30000000000001, -86.85, -95.25, -95.85, -96.75, -95.55, -100.19999999999999, -102.0, -94.95, -84.0, -90.89999999999999, -88.8, -87.6, -88.5, -86.10000000000001, -84.3, -85.35000000000001, -83.55000000000001, -78.60000000000001, -79.80000000000001, -86.25, -94.64999999999999, -96.44999999999999, -95.55, -93.45, -98.55000000000001, -102.0, -104.25, -102.45, -103.05, -102.9, -98.7, -99.75, -104.4, -99.75, -96.44999999999999, -94.64999999999999, -113.1, -115.65, -114.45, -121.64999999999999, -121.5, -115.8, -112.64999999999999, -115.05, -116.85, -116.85, -116.7, -112.64999999999999, -112.05, -118.2, -122.99999999999999, -125.25, -124.65, -127.05000000000001, -126.0, -127.8, -131.85, -129.0, -127.35000000000001, -135.29999999999998, -135.0, -158.25, -159.9, -160.2, -163.65, -165.29999999999998, -167.4, -168.75, -167.85, -171.3, -174.0, -174.9, -171.15, -177.75, -179.25, -165.75, -169.2, -169.65, -170.54999999999998, -169.65, -167.85, -170.70000000000002, -174.60000000000002, -178.65, -177.0, -181.2, -178.20000000000002, -183.6, -182.55, -186.15, -189.0, -187.79999999999998, -182.7, -179.1, -180.15, -175.05, -175.95000000000002, -175.2, -177.6, -178.8, -176.85, -174.29999999999998, -170.70000000000002, -168.45000000000002, -166.2, -167.85, -166.2, -167.85, -166.35, -170.85000000000002, -168.6, -172.5, -173.1, -166.5, -161.54999999999998, -166.64999999999998, -163.20000000000002, -164.1, -162.0, -158.55, -155.85000000000002, -157.5, -160.35, -161.54999999999998, -155.85000000000002, -164.70000000000002, -167.4, -174.0, -169.65, -159.0, -165.0, -161.54999999999998, -161.25, -161.7, -161.7, -157.95, -155.1, -152.85, -156.15, -161.7, -165.0, -158.85, -151.64999999999998, -147.3, -146.85, -140.39999999999998, -141.15, -138.45000000000002, -136.64999999999998, -131.85, -129.0, -128.1, -129.60000000000002, -126.74999999999999, -125.70000000000002, -126.44999999999999, -126.9, -126.15, -124.50000000000001, -123.60000000000001, -125.85000000000001, -115.5, -117.75, -114.9, -116.85, -112.2, -105.0, -100.35000000000001, -97.64999999999999, -96.3, -94.5, -86.7, -89.4, -92.85000000000001, -92.25, -92.25, -87.9, -85.5, -81.3, -81.15, -78.75, -75.3, -79.2, -79.2, -80.4, -67.05, -68.1, -72.9, -73.35, -78.15, -76.35, -79.80000000000001, -71.39999999999999, -63.3, -63.0, -66.75, -63.0, -64.80000000000001, -62.400000000000006, -63.6, -62.55, -67.8, -63.45, -59.1, -62.85000000000001, -64.2, -59.1, -60.89999999999999, -65.7, -66.60000000000001, -66.60000000000001, -67.5, -62.85000000000001, -71.55, -68.85, -67.35000000000001, -65.85, -65.25, -71.85, -64.2, -53.1, -53.55, -55.800000000000004, -59.550000000000004, -62.55, -66.3, -67.64999999999999, -72.9, -66.9, -69.9, -79.05, -89.4, -93.0, -99.3, -105.6, -103.2, -104.85000000000001, -104.10000000000001, -102.75, -103.2, -105.14999999999999, -105.3, -105.14999999999999, -104.10000000000001, -99.15, -98.25, -98.7, -98.7, -99.3, -102.75, -102.0, -99.3, -98.39999999999999, -51.9, -48.9, -50.4, -43.35, -45.75, -29.4, -30.749999999999996, -35.85, -41.25, -44.1, -40.65, -45.15, -40.65, -40.05, -41.85, -46.65, -51.6, -50.099999999999994, -48.0, -45.0, -52.65, -46.949999999999996, -25.8, -24.599999999999998, -20.849999999999998, -20.1, -18.45, -15.3, -15.3, -23.85, -17.549999999999997, -8.7, -5.8500000000000005, 3.9000000000000004, -1.2, 7.800000000000001, 4.35, 0.8999999999999999, 6.45, 6.3, 9.9, 6.3, -5.7, -4.050000000000001, -19.05, -7.5, -2.1, -1.2, 15.75, 20.1, 42.45, 32.400000000000006, 29.55, 14.85, 15.600000000000001, 18.15, 27.0, 47.400000000000006, -52.949999999999996, -56.1, -58.199999999999996, -55.05, -61.050000000000004, -64.95, -61.800000000000004, -60.45, -58.199999999999996, -47.25, -50.099999999999994, -51.3, -53.25, -53.7, -61.050000000000004, -61.349999999999994, -52.2, -44.85, -44.1, -52.35, -52.949999999999996, -46.349999999999994, -45.0, -34.199999999999996, -39.6, -44.7, -41.1, -41.25, -38.7, -36.6, -33.300000000000004, -31.349999999999998, -27.3, -22.35, -27.6, -23.25, -24.45, -24.9, -20.55, -37.8, -43.35, -44.85, -39.75, -60.3, -55.800000000000004, -57.15, -58.35, -59.7, -67.95, -69.3, -74.55, -78.75, -77.69999999999999, -69.0, -75.45, -76.95, -75.3, -77.85000000000001, -72.45, -78.15, -70.19999999999999, -37.050000000000004, -41.4, -34.8, -45.6, -46.2, -33.75, -28.65, -32.25, -48.0, -51.45, -45.0, -39.300000000000004, -30.449999999999996, -35.099999999999994, -27.6, -22.5, -22.8, -16.35, -15.600000000000001, -24.150000000000002, -48.75, -43.199999999999996, -42.0, -46.65, -45.9, -44.25, -40.65, -45.75, -47.1, -52.050000000000004, -55.2, -65.55, -58.35, -57.3, -51.45, -43.050000000000004, -40.05, -35.099999999999994, -40.2, -38.4, -36.9, -34.8, -33.75, -36.6, -46.349999999999994, -46.5, -49.8, -46.2, -39.449999999999996, -39.0, -36.0, -42.15, -45.9, -37.5, -45.9, -60.15, -53.7, -63.6, -67.05, -72.75, -74.85000000000001, -86.39999999999999, -57.3, -60.45, -68.55000000000001, -63.0, -61.050000000000004, -69.9, -74.10000000000001, -67.35000000000001, -58.8, -56.699999999999996, -53.849999999999994, -62.85000000000001, -55.5, -52.65, -46.65, -40.5, -39.300000000000004, -42.9, -36.9, -34.8, -28.5, -35.25, -31.8, -9.0, -6.1499999999999995, -4.2, -4.050000000000001, 0.0], currentGain: 23.59, priceHistory: [21.74, 21.36, 21.12, 20.87, 21.6, 21.83, 21.92, 21.77, 21.79, 21.69, 21.9, 21.86, 21.6, 22.02, 21.58, 21.35, 21.7, 21.76, 21.22, 22.42, 22.41, 22.9, 22.59, 22.84, 22.15, 21.97, 23.2, 24.74, 25.27, 24.54, 23.9, 24.54, 23.74, 24.27, 25.53, 25.94, 26.41, 24.81, 23.42, 23.22, 23.72, 23.49, 23.09, 23.07, 24.48, 23.63, 23.67, 23.2, 22.66, 21.99, 21.82, 20.9, 20.75, 20.18, 19.71, 21.2, 21.09, 20.65, 20.33, 19.26, 19.73, 19.75, 19.55, 18.94, 18.25, 17.0, 17.41, 17.67, 17.55, 18.23, 17.48, 17.49, 17.1, 16.93, 16.77, 17.38, 18.09, 18.23, 18.15, 17.33, 17.51, 17.1, 16.79, 17.61, 17.83, 16.41, 16.91, 16.0, 16.06, 17.01, 12.44, 12.92, 12.98, 13.02, 13.58, 13.78, 13.54, 13.61, 13.22, 12.1, 12.16, 11.06, 11.27, 11.21, 11.89, 11.85, 12.18, 11.95, 11.23, 11.0, 10.65, 10.09, 9.47, 8.37, 8.91, 9.06, 11.35, 10.42, 10.81, 11.99, 11.45, 13.0, 13.85, 13.63, 13.55, 14.39, 14.17, 14.66, 15.67, 15.89, 16.15, 16.7, 16.92, 17.2, 17.17, 17.56, 17.59, 17.4, 17.61, 17.6, 17.13, 17.0, 16.19, 18.98, 18.23, 18.38, 18.88, 19.14, 18.99, 18.62, 19.05, 19.25, 19.1, 19.0, 19.11, 18.25, 18.19, 17.99, 18.0, 17.41, 17.36, 16.67, 17.03, 16.78, 16.75, 16.78, 16.33, 15.89, 16.03, 15.97, 15.61, 15.49, 15.55, 15.46, 15.11, 15.1, 15.11, 15.09, 14.45, 14.23, 14.09, 14.23, 14.74, 14.68, 15.0, 14.92, 14.6, 15.25, 15.35, 15.46, 15.5, 15.26, 15.08, 15.31, 15.16, 14.69, 13.94, 14.37, 14.47, 14.38, 14.39, 14.19, 14.16, 14.41, 14.83, 15.35, 15.18, 15.06, 14.86, 14.64, 14.68, 13.96, 13.52, 13.18, 14.0, 14.58, 13.52, 13.78, 13.67, 14.09, 13.76, 14.16, 14.08, 14.21, 14.15, 14.47, 14.52, 14.3, 14.8, 15.52, 15.8, 16.02, 17.0, 17.11, 17.04, 17.12, 17.04, 16.88, 16.9, 16.83, 15.76, 16.0, 15.77, 15.31, 15.02, 15.31, 16.62, 15.87, 15.8, 15.93, 15.83, 15.78, 15.55, 15.51, 16.11, 15.55, 16.08, 16.14, 16.08, 16.16, 15.98, 15.99, 16.36, 17.0, 16.81, 16.98, 16.76, 15.91, 16.29, 16.46, 17.03, 16.68, 16.8, 16.93, 17.5, 17.89, 17.69, 17.61, 14.83, 14.15, 14.02, 14.55, 14.93, 15.0, 15.5, 15.61, 15.57, 15.26, 15.25, 15.14, 15.23, 14.76, 14.1, 14.35, 14.3, 14.58, 14.71, 14.53, 14.76, 14.56, 14.84, 14.67, 14.86, 13.55, 13.96, 14.11, 13.75, 13.54, 13.77, 13.87, 13.82, 12.94, 12.95, 11.69, 11.89, 11.99, 11.68, 11.57, 11.56, 11.12, 11.31, 11.54, 11.19, 11.49, 11.42, 10.66, 10.49, 10.11, 10.49, 10.98, 10.82, 11.17, 11.77, 11.8, 11.24, 11.2, 11.14, 11.22, 10.91, 10.79, 11.26, 11.99, 11.53, 11.67, 11.75, 11.69, 11.85, 11.97, 11.9, 12.02, 12.35, 12.27, 11.84, 11.28, 11.16, 11.22, 11.36, 11.02, 10.79, 10.64, 10.76, 10.72, 10.73, 11.01, 10.94, 10.63, 10.94, 11.16, 11.28, 10.05, 9.88, 9.96, 9.48, 9.49, 9.87, 10.08, 9.92, 9.8, 9.8, 9.81, 10.08, 10.12, 9.71, 9.39, 9.24, 9.28, 9.12, 9.19, 9.07, 8.8, 8.99, 9.1, 8.57, 8.59, 7.04, 6.93, 6.91, 6.68, 6.57, 6.43, 6.34, 6.4, 6.17, 5.99, 5.93, 6.18, 5.74, 5.64, 6.54, 6.31, 6.28, 6.22, 6.28, 6.4, 6.21, 5.95, 5.68, 5.79, 5.51, 5.71, 5.35, 5.42, 5.18, 4.99, 5.07, 5.41, 5.65, 5.58, 5.92, 5.86, 5.91, 5.75, 5.67, 5.8, 5.97, 6.21, 6.36, 6.51, 6.4, 6.51, 6.4, 6.5, 6.2, 6.35, 6.09, 6.05, 6.49, 6.82, 6.48, 6.71, 6.65, 6.79, 7.02, 7.2, 7.09, 6.9, 6.82, 7.2, 6.61, 6.43, 5.99, 6.28, 6.99, 6.59, 6.82, 6.84, 6.81, 6.81, 7.06, 7.25, 7.4, 7.18, 6.81, 6.59, 7.0, 7.48, 7.77, 7.8, 8.23, 8.18, 8.36, 8.48, 8.8, 8.99, 9.05, 8.95, 9.14, 9.21, 9.16, 9.13, 9.18, 9.29, 9.35, 9.2, 9.89, 9.74, 9.93, 9.8, 10.11, 10.59, 10.9, 11.08, 11.17, 11.29, 11.81, 11.63, 11.4, 11.44, 11.44, 11.73, 11.89, 12.17, 12.18, 12.34, 12.57, 12.31, 12.31, 12.23, 13.12, 13.05, 12.73, 12.7, 12.38, 12.5, 12.27, 12.83, 13.37, 13.39, 13.14, 13.39, 13.27, 13.43, 13.35, 13.42, 13.07, 13.36, 13.65, 13.4, 13.31, 13.65, 13.53, 13.21, 13.15, 13.15, 13.09, 13.4, 12.82, 13.0, 13.1, 13.2, 13.24, 12.8, 13.31, 14.05, 14.02, 13.87, 13.62, 13.42, 13.17, 13.08, 12.73, 13.13, 12.93, 12.32, 11.63, 11.39, 10.97, 10.55, 10.71, 10.6, 10.65, 10.74, 10.71, 10.58, 10.57, 10.58, 10.65, 10.98, 11.04, 11.01, 11.01, 10.97, 10.74, 10.79, 10.97, 11.03, 14.13, 14.33, 14.23, 14.7, 14.54, 15.63, 15.54, 15.2, 14.84, 14.65, 14.88, 14.58, 14.88, 14.92, 14.8, 14.48, 14.15, 14.25, 14.39, 14.59, 14.08, 14.46, 15.87, 15.95, 16.2, 16.25, 16.36, 16.57, 16.57, 16.0, 16.42, 17.01, 17.2, 17.85, 17.51, 18.11, 17.88, 17.65, 18.02, 18.01, 18.25, 18.01, 17.21, 17.32, 16.32, 17.09, 17.45, 17.51, 18.64, 18.93, 20.42, 19.75, 19.56, 18.58, 18.63, 18.8, 19.39, 20.75, 14.06, 13.85, 13.71, 13.92, 13.52, 13.26, 13.47, 13.56, 13.71, 14.44, 14.25, 14.17, 14.04, 14.01, 13.52, 13.5, 14.11, 14.6, 14.65, 14.1, 14.06, 14.5, 14.59, 15.31, 14.95, 14.61, 14.85, 14.84, 15.01, 15.15, 15.37, 15.5, 15.77, 16.1, 15.75, 16.04, 15.96, 15.93, 16.22, 15.07, 14.7, 14.6, 14.94, 13.57, 13.87, 13.78, 13.7, 13.61, 13.06, 12.97, 12.62, 12.34, 12.41, 12.99, 12.56, 12.46, 12.57, 12.4, 12.76, 12.38, 12.91, 15.12, 14.83, 15.27, 14.55, 14.51, 15.34, 15.68, 15.44, 14.39, 14.16, 14.59, 14.97, 15.56, 15.25, 15.75, 16.09, 16.07, 16.5, 16.55, 15.98, 14.34, 14.71, 14.79, 14.48, 14.53, 14.64, 14.88, 14.54, 14.45, 14.12, 13.91, 13.22, 13.7, 13.77, 14.16, 14.72, 14.92, 15.25, 14.91, 15.03, 15.13, 15.27, 15.34, 15.15, 14.5, 14.49, 14.27, 14.51, 14.96, 14.99, 15.19, 14.78, 14.53, 15.09, 14.53, 13.58, 14.01, 13.35, 13.12, 12.74, 12.6, 11.83, 13.77, 13.56, 13.02, 13.39, 13.52, 12.93, 12.65, 13.1, 13.67, 13.81, 14.0, 13.4, 13.89, 14.08, 14.48, 14.89, 14.97, 14.73, 15.13, 15.27, 15.69, 15.24, 15.47, 16.99, 17.18, 17.31, 17.32, 17.59], open: "21.5000", close: "21.7400", high: "22.1995", low: "20.8700", volume: "23754063", priceChange1D: 1.78, priceChange5D: -0.41, priceChange1M: -3.76, priceChange1Y: 29.33, volumeChange1D: 84.22, volumeChange5D: 173.26, volumeChange1M: 56.17, volumeChange1Y: 10.44)]]
